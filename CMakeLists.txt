cmake_minimum_required(VERSION 3.15)
project(GameEngine LANGUAGES CXX C)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
option(ENABLE_DEVELOPER_MODE "Enable developer mode" ON)

if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    get_property(isMultiConfig GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
    if (isMultiConfig)
        if (NOT Dev IN_LIST CMAKE_CONFIGURATION_TYPES)
            list(APPEND CMAKE_CONFIGURATION_TYPES Dev)
        endif ()
    else ()
        set(buildTypes Debug Dev Release)
        set(defaultBuildType Dev)
        set(CMAKE_DEV_POSTFIX _dev)
        set_property(CACHE CMAKE_BUILD_TYPE PROPERTY
                STRINGS "#{buildTypes}"
        )
        if (NOT CMAKE_BUILD_TYPE)
            set(CMAKE_BUILD_TYPE "${defaultBuildType}" CACHE STRING "" FORCE)
        elseif (NOT CMAKE_BUILD_TYPE IN_LIST buildTypes)
            message(FATAL_ERROR "Unknown build type: ${CMAKE_BUILD_TYPE}")
        endif ()
    endif ()
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_STATIC_LINKER_FLAGS_DEBUG "${CMAKE_STATIC_LINKER_FLAGS_DEBUG}" CACHE STRING "" FORCE)
    set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_C_FLAGS_DEV "${CMAKE_C_FLAGS_RELWITHDEBINFO} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_CXX_FLAGS_DEV "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_EXE_LINKER_FLAGS_DEV "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_SHARED_LINKER_FLAGS_DEV "${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
    set(CMAKE_STATIC_LINKER_FLAGS_DEV "${CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO}" CACHE STRING "" FORCE)
    set(CMAKE_MODULE_LINKER_FLAGS_DEV "${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO} -DASSERTIONS_ENABLED" CACHE STRING "" FORCE)
endif ()

find_program(CCACHE_PROGRAM ccache)
if (CCACHE_PROGRAM)
    set(CMAKE_CXX_COMPILER_LAUNCHER "${CCACHE_PROGRAM}")
endif ()

option(SDL_VENDORED "Use vendored SDL" OFF)
if (SDL_VENDORED)
    add_subdirectory(thirdparty/SDL)
else ()
    find_package(SDL3 REQUIRED CONFIG REQUIRED COMPONENTS SDL3-shared)
endif ()

find_package(OpenGL REQUIRED)
find_package(Lua REQUIRED)

include(cmake/LinkSDL.cmake)
add_subdirectory(thirdparty)
add_subdirectory(src)
